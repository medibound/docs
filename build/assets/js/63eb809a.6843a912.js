"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[993],{1241:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"hardware-support/tabs/raspberry-pi","title":"Raspberry Pi Integration Guide","description":"Documentation coming soon","source":"@site/docs/hardware-support/tabs/raspberry-pi.md","sourceDirName":"hardware-support/tabs","slug":"/hardware-support/tabs/raspberry-pi","permalink":"/docs/hardware-support/tabs/raspberry-pi","draft":false,"unlisted":false,"editUrl":"https://github.com/medibound/docs/tree/main/docs/hardware-support/tabs/raspberry-pi.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"ESP32 Integration Guide","permalink":"/docs/hardware-support/tabs/esp32"},"next":{"title":"Arduino Integration Guide","permalink":"/docs/hardware-support/tabs/arduino"}}');var i=t(4848),s=t(8453);const o={sidebar_position:2},a="Raspberry Pi Integration Guide",d={},c=[];function p(e){const r={em:"em",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"raspberry-pi-integration-guide",children:"Raspberry Pi Integration Guide"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"Documentation coming soon"})}),"\n",(0,i.jsx)(r.p,{children:"This section will cover:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Setting up Raspberry Pi with Medibound"}),"\n",(0,i.jsx)(r.li,{children:"Python SDK implementation"}),"\n",(0,i.jsx)(r.li,{children:"GPIO integration"}),"\n",(0,i.jsx)(r.li,{children:"Sensor connectivity"}),"\n",(0,i.jsx)(r.li,{children:"Best practices for medical device integration"}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>a});var n=t(6540);const i={},s=n.createContext(i);function o(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);